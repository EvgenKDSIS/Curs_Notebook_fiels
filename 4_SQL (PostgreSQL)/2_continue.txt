1. Вам необходимо написать SQL-запросы для выполнения следующих задач:

	a. Загрузите в свою базу датафрейм Mall_Customers. Напишите запрос, который вернёт долю мужчин и женщин среди посетителей магазина. (Хинт: количество посетителей можно посчитать отдельно).
-----------------------------------------------------------------
select genre
        , count(*) as total
from mall_customers as mc
group by genre 
-----------------------------------------------------------------

	b. Напишите запрос, который вернёт всех мужчин, отсортированных по возрастанию возраста, убыванию Annual_Income и возрастанию Spending_Score (используйте иерархическую сортировку).
-----------------------------------------------------------------
select customerid
       , age
       , annual_income
       , spending_score
from public.mall_customers mc 
where genre = 'Male'
order by age, annual_income desc, spending_score
-----------------------------------------------------------------

2. Создайте новую схему в своей базе данных.
 
Назовите её AERO и запустите на этой схеме следующий скрипт aero_pg_script.sql Внимание! При первом запуске скрипта нужно будет пропустить 4 ошибки т.к. в начале  идёт удаление таблиц которых на данный момент не существует.

3. Ознакомьтесь с моделью данных, представленной на схеме...

	1. Напишите скрипт, который позволит узнать, какой компанией летал каждый из пассажиров.
	-----------------------------------------------
	SELECT p."name" Name_passeger ,
		 c."name" Name_Company
	FROM "AERO".pass_in_trip pit
	JOIN "AERO".passenger p
		ON p.id_psg = pit.id_psg
	JOIN "AERO".trip t
		ON t.trip_no = pit.trip_no
	JOIN "AERO".company c
		ON t.id_comp = c.id_comp

	--Ответе, пожалуйста на вопрос: Как их сгрупировать по именам?(Не вышло)
	-----------------------------------------------

	2. Напишите скрипт, который вернёт всех пассажиров, не совершавших полёт (не имевших билетов).
	-----------------------------------------------
	SELECT p."name"
	FROM "AERO".passenger p
	WHERE p.id_psg NOT IN 
		(SELECT p.id_psg
		FROM "AERO".passenger p
		JOIN "AERO".pass_in_trip pit
			ON p.id_psg = pit.id_psg )
	-----------------------------------------------

	3. Напишите скрипт, который позволит узнать, в какие города летала Николь Кидман.
	-----------------------------------------------
	SELECT t.town_from ,
		 t.town_to
	FROM "AERO".pass_in_trip pit
	JOIN "AERO".passenger p
		ON p.id_psg = pit.id_psg
	JOIN "AERO".trip t
		ON t.trip_no = pit.trip_no
	WHERE p."name" = 'Nikole Kidman'
	-----------------------------------------------

4. Создайте новую схему COMP для скрипта computer_pg_script.sql.  

	1. Напишите скрипт, который позволит узнать цену PC с маркером А.
	-----------------------------------------------
	SELECT p.price
	FROM "COMP".pc p
	JOIN "COMP".product p2
		ON p.model = p2.model
	WHERE p2.maker = 'A'
	-----------------------------------------------

	2. Напишите скрипт, который позволит узнать, какие маркеры у лазерных принтеров.
	-----------------------------------------------
	SELECT p.maker
	FROM "COMP".product p
	JOIN "COMP".printer p2
		ON p.model = p2.model
	WHERE p2."type" = 'Laser'
	-----------------------------------------------